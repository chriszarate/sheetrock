{"version":3,"file":"sheetrock.min.js","sources":["../src/lib/config.js","../src/lib/util.js","../src/lib/error.js","../src/lib/options.js","../src/lib/request.js","../src/lib/row.js","../src/lib/response.js","../src/lib/transport-browser.js","../src/index.js","../src/lib/transport.js"],"sourcesContent":["// Defaults for Sheetrock user options.\nexport const defaults = {\n  url: '', // String  -- Google Sheet URL\n  query: '', // String  -- Google Visualization API query\n  target: null, // DOM Element -- An element to append output to\n  fetchSize: 0, // Integer -- Number of rows to fetch (0 = all)\n  labels: [], // Array   -- Override *returned* column labels\n  rowTemplate: null, // Function / Template\n  callback: null, // Function\n  reset: false, // Boolean -- Reset request status\n};\n\n// Map of legacy (pre-v1.0.0) option names to current user option names.\nexport const legacyOptions = {\n  sql: 'query',\n  resetStatus: 'reset',\n  chunkSize: 'fetchSize',\n  rowHandler: 'rowTemplate',\n};\n\n// Google Visualization API endpoints and parameter formats.\nexport const sheetTypes = {\n  2014: {\n    apiEndpoint: 'https://docs.google.com/spreadsheets/d/%key%/gviz/tq?',\n    keyFormat: new RegExp('spreadsheets/d/([^/#]+)', 'i'),\n    gidFormat: new RegExp('gid=([^/&#]+)', 'i'),\n  },\n  2010: {\n    apiEndpoint: 'https://spreadsheets.google.com/tq?key=%key%&',\n    keyFormat: new RegExp('key=([^&#]+)', 'i'),\n    gidFormat: new RegExp('gid=([^/&#]+)', 'i'),\n  },\n};\n","/* global Event */\n\n// Extract the string contained in a cell object.\nexport function getCellValue(cell) {\n  let value = cell ? cell.f || cell.v || cell : '';\n\n  // Extract cell value while avoiding array values.\n  if (value instanceof Array) {\n    value = value.join('');\n  }\n\n  if (typeof value === 'object') {\n    return '';\n  }\n\n  return `${value}`.replace(/^\\s+|\\s+$/, '');\n}\n\n// Extract a DOM element from a possible jQuery blob.\nexport function extractElement(blob) {\n  let el = blob;\n\n  if (typeof el === 'object' && el.jquery && el.length) {\n    [el] = el;\n  }\n\n  return (el && el.nodeType && el.nodeType === 1) ? el : null;\n}\n\n// Append HTML output to DOM.\nexport function append(target, html) {\n  if (target && target.insertAdjacentHTML) {\n    target.insertAdjacentHTML('beforeEnd', html);\n  }\n}\n\n// Return true if the DOM element has the specified class.\nexport function hasClass(el, className) {\n  const classes = ` ${el.className} `;\n  return classes.indexOf(` ${className} `) !== -1;\n}\n\n// Return true if the DOM element is a table.\nexport function isTable(el) {\n  return el && el.tagName === 'TABLE';\n}\n\n// Wrap a string in tag.\nexport function wrapTag(str, tag) {\n  return `<${tag}>${str}</${tag}>`;\n}\n\n// Default row template: Output a row object as an HTML table row. Use \"td\"\n// for table body row, \"th\" for table header rows.\nexport function toHTML(row) {\n  const tag = row.num ? 'td' : 'th';\n  let html = '';\n  Object.keys(row.cells).forEach((key) => {\n    html += wrapTag(row.cells[key], tag);\n  });\n  return wrapTag(html, 'tr');\n}\n\n// Trigger a custom event on the targeted element.\nexport function triggerEvent(el, eventName) {\n  if (typeof Event === 'function') {\n    const event = new Event(eventName);\n    el.dispatchEvent(event);\n  }\n}\n","export default class SheetrockError extends Error {\n  constructor(message = '', code = null) {\n    super();\n    this.name = 'SheetrockError';\n    this.code = code;\n    this.message = message;\n  }\n}\n","import * as config from './config';\nimport { extractElement } from './util';\n\nimport SheetrockError from './error';\n\n// Support some legacy option names.\nfunction translateLegacyOptions(options) {\n  const newOptions = {};\n\n  Object.keys(options).forEach((key) => {\n    if ({}.hasOwnProperty.call(config.legacyOptions, key)) {\n      newOptions[config.legacyOptions[key]] = options[key];\n    } else {\n      newOptions[key] = options[key];\n    }\n  });\n\n  return newOptions;\n}\n\nfunction setUserOptions(options) {\n  const validatedOptions = {};\n\n  // Look for valid DOM element target.\n  validatedOptions.target = extractElement(options.target);\n\n  // Correct bad integer values.\n  validatedOptions.fetchSize = Math.max(0, parseInt(options.fetchSize, 10) || 0);\n\n  // Require DOM element or a callback function. Otherwise, the data has nowhere to go.\n  if (!validatedOptions.target && !options.callback && !config.defaults.callback) {\n    throw new SheetrockError('No element targeted or callback provided.');\n  }\n\n  // Extend default options.\n  return { ...config.defaults, ...options, ...validatedOptions };\n}\n\nfunction setRequestOptions(options, data) {\n  // If the user passed data, we don't want to validate the URL.\n  if (data) {\n    return { data };\n  }\n\n  // Get API endpoint, key, and gid from a Google Sheet URL.\n  let sheetType = null;\n  Object.keys(config.sheetTypes).forEach((key) => {\n    const value = config.sheetTypes[key];\n    if (value.keyFormat.test(options.url) && value.gidFormat.test(options.url)) {\n      sheetType = value;\n    }\n  });\n\n  if (sheetType) {\n    const sheetKey = options.url.match(sheetType.keyFormat)[1];\n    return {\n      key: sheetKey,\n      gid: options.url.match(sheetType.gidFormat)[1],\n      apiEndpoint: sheetType.apiEndpoint.replace('%key%', sheetKey),\n    };\n  }\n\n  // Require a Sheet key and gid.\n  throw new SheetrockError('No key/gid in the provided URL.');\n}\n\nexport default class Options {\n  constructor(options = {}, data = false) {\n    this.user = setUserOptions(translateLegacyOptions(options));\n    this.request = setRequestOptions(this.user, data);\n\n    // Generate a request ID that can be used as a caching key.\n    this.requestIndex = `${this.request.key}_${this.request.gid}_${this.user.query}`;\n  }\n}\n","import SheetrockError from './error';\n\n// Provide a simple state store shared across requests.\nconst stateCache = {\n  defaults: {\n    failed: false,\n    header: 0,\n    labels: null,\n    loaded: false,\n    offset: 0,\n  },\n  store: {},\n};\n\nexport default class Request {\n  constructor(options) {\n    this.options = options;\n    this.index = options.requestIndex;\n\n    // Abandon requests that have previously generated an error.\n    if (this.state.failed) {\n      throw new SheetrockError('A previous request for this resource failed.');\n    }\n\n    // Abandon requests that have already been loaded.\n    if (this.state.loaded) {\n      throw new SheetrockError('No more rows to load!');\n    }\n  }\n\n  get state() {\n    const hasPreviousState = {}.hasOwnProperty.call(stateCache.store, this.index);\n    const reset = this.options.user.reset || this.options.request.data;\n\n    if (!hasPreviousState || reset) {\n      const savedState = {\n        labels: hasPreviousState ? stateCache.store[this.index].labels : null,\n      };\n\n      stateCache.store[this.index] = { ...stateCache.defaults, ...savedState };\n    }\n\n    return stateCache.store[this.index];\n  }\n\n  // Assemble a full URI for the query.\n  get url() {\n    // If requested, make a request for paged data.\n    const size = this.options.user.fetchSize;\n    const pageQuery = (size) ? ` limit ${size + 1} offset ${this.state.offset}` : '';\n\n    const queryVars = [\n      `gid=${encodeURIComponent(this.options.request.gid)}`,\n      `tq=${encodeURIComponent(this.options.user.query + pageQuery)}`,\n    ];\n    return this.options.request.apiEndpoint + queryVars.join('&');\n  }\n\n  // Extend exsiting attributes with passed attributes.\n  update(attributes = {}) {\n    stateCache.store[this.index] = Object.assign(this.state, attributes);\n  }\n}\n","import { getCellValue } from './util';\n\nexport default class Row {\n  constructor(number, cellsArray, labels) {\n    this.num = number;\n    this.cellsArray = cellsArray.map(getCellValue);\n    this.labels = labels;\n  }\n\n  // Get an object with labels as keys.\n  get cells() {\n    const cellsObj = {};\n    this.labels.forEach((label, index) => {\n      cellsObj[label] = this.cellsArray[index];\n    });\n    return cellsObj;\n  }\n}\n","import Row from './row';\nimport SheetrockError from './error';\n\nimport * as util from './util';\n\n// Get useful information about the response.\nexport default class Response {\n  constructor(request) {\n    this.request = request;\n    this.options = request.options;\n  }\n\n  setAttributes() {\n    const { fetchSize } = this.options.user;\n    const { rows } = this.raw.table;\n    const { cols } = this.raw.table;\n\n    // Initialize a hash for the response attributes.\n    const attributes = {\n      last: rows.length - 1,\n      rowNumberOffset: this.request.state.header || 0,\n    };\n\n    // Determine if Google has extracted column labels from a header row.\n    let columnLabels = this.request.state.labels;\n    if (!this.request.state.offset) {\n      // Use extracted column labels, the first row, or column letter.\n      columnLabels = cols.map((col, i) => {\n        if (col.label) {\n          return col.label.replace(/\\s/g, '');\n        }\n\n        // Get column labels from the first row of the response.\n        attributes.last += 1;\n        attributes.rowNumberOffset = 1;\n        return util.getCellValue(rows[0].c[i]) || col.id;\n      });\n\n      this.request.update({\n        header: attributes.rowNumberOffset,\n        labels: columnLabels,\n        offset: this.request.state.offset + attributes.rowNumberOffset,\n      });\n    }\n\n    // The Google API generates an unrecoverable error when the 'offset' is\n    // larger than the number of available rows, which is problematic for\n    // paged requests. As a workaround, we request one more row than we need\n    // and stop when we see less rows than we requested.\n\n    // Remember whether this request has been fully loaded.\n    if (!fetchSize || (rows.length - attributes.rowNumberOffset) < fetchSize) {\n      attributes.last += 1;\n      this.request.update({ loaded: true });\n    }\n\n    // If column labels are provided and have the expected length, use them.\n    const userLabels = this.options.user.labels;\n    const userLabelsValid = userLabels && userLabels.length === columnLabels.length;\n    attributes.labels = userLabelsValid ? userLabels : columnLabels;\n\n    // Return the response attributes.\n    this.attributes = attributes;\n  }\n\n  // Parse data, row by row, and generate a simpler output array.\n  setOutput() {\n    this.rows = [];\n\n    // Add a header row constructed from the column labels, if appropriate.\n    if (!this.request.state.offset && !this.attributes.rowNumberOffset) {\n      this.rows.push(new Row(0, this.attributes.labels, this.attributes.labels));\n    }\n\n    // Each table cell ('c') can contain two properties: 'p' contains\n    // formatting and 'v' contains the actual cell value.\n\n    // Loop through each table row.\n    this.raw.table.rows.forEach((row, i) => {\n      // Proceed if the row has cells and the row index is within the targeted\n      // range. (This avoids displaying too many rows when paging data.)\n      if (row.c && i < this.attributes.last) {\n        // Get the \"real\" row index (not counting header rows). Create a row\n        // object and add it to the output array.\n        const counter = (this.request.state.offset + i + 1) - this.attributes.rowNumberOffset;\n        this.rows.push(new Row(counter, row.c, this.attributes.labels));\n      }\n    });\n\n    // Remember the new row offset.\n    this.request.update({\n      offset: this.request.state.offset + this.options.user.fetchSize,\n    });\n  }\n\n  // Generate HTML from rows using a template.\n  setHTML() {\n    const { target } = this.options.user;\n    const template = this.options.user.rowTemplate || util.toHTML;\n    const isTable = util.isTable(target);\n    const needsHeader = target && util.hasClass(target, 'sheetrock-header');\n\n    // Pass each row to the row template. Only parse header rows if the target\n    // is a table or indicates via className that it wants the header.\n    let headerHTML = '';\n    let bodyHTML = '';\n    this.rows.forEach((row) => {\n      if (row.num) {\n        bodyHTML += template(row);\n      } else if (isTable || needsHeader) {\n        headerHTML += template(row);\n      }\n    });\n\n    if (isTable) {\n      headerHTML = util.wrapTag(headerHTML, 'thead');\n      bodyHTML = util.wrapTag(bodyHTML, 'tbody');\n    }\n\n    util.append(target, headerHTML + bodyHTML);\n    util.triggerEvent(target, 'sheetrock:loaded');\n\n    this.html = headerHTML + bodyHTML;\n  }\n\n  // Load API response.\n  loadData(rawData, callback) {\n    this.raw = rawData;\n\n    try {\n      this.setAttributes();\n      this.setOutput();\n    } catch (error) {\n      callback(new SheetrockError('Unexpected API response format.'));\n      return;\n    }\n\n    // Don't catch errors thrown in setHTML; let the user handle them.\n    this.setHTML();\n    callback(null);\n  }\n}\n","import SheetrockError from './error';\n\n/* global window */\n\nlet callbackIndex = 0;\n\nexport default function get(response, callback) {\n  const headElement = window.document.getElementsByTagName('head')[0];\n  const scriptElement = window.document.createElement('script');\n  const callbackName = `_sheetrock_callback_${callbackIndex}`;\n  callbackIndex += 1;\n\n  function always() {\n    headElement.removeChild(scriptElement);\n    delete window[callbackName];\n  }\n\n  function success(data) {\n    always();\n    response.loadData(data, callback);\n  }\n\n  function error() {\n    always();\n    callback(new SheetrockError('Request failed.'));\n  }\n\n  window[callbackName] = success;\n\n  if (scriptElement.addEventListener) {\n    scriptElement.addEventListener('error', error, false);\n    scriptElement.addEventListener('abort', error, false);\n  }\n\n  scriptElement.type = 'text/javascript';\n  scriptElement.src = `${response.request.url}&tqx=responseHandler:${callbackName}`;\n  headElement.appendChild(scriptElement);\n}\n","/*!\n * Sheetrock\n * Quickly connect to, query, and lazy-load data from Google Sheets.\n * https://chriszarate.github.io/sheetrock/\n * License: MIT\n */\n\n/* global window */\n\nimport Options from './lib/options';\nimport Request from './lib/request';\nimport Response from './lib/response';\n\nimport { defaults } from './lib/config';\nimport transport from './lib/transport';\nimport browserTransport from './lib/transport-browser';\n\nconst version = '1.2.0';\n\nfunction sheetrock(userOptions = {}, data = null) {\n  let options = null;\n  let request = null;\n  let response = null;\n\n  // Call the user's callback function or rethrow error.\n  function handleError(error) {\n    if (error && error.name === 'SheetrockError') {\n      if (request && request.update) {\n        request.update({ failed: true });\n      }\n    }\n\n    if (userOptions.callback) {\n      userOptions.callback(error, options, response);\n      return;\n    }\n\n    if (error) {\n      throw error;\n    }\n  }\n\n  try {\n    options = new Options(({ target: this, ...userOptions }), !!data);\n    request = new Request(options);\n    response = new Response(request);\n  } catch (error) {\n    handleError(error);\n  }\n\n  if (data) {\n    response.loadData(data, handleError);\n  } else if (options && request && response) {\n    if (typeof window === 'object' && 'document' in window) {\n      browserTransport(response, handleError);\n    } else {\n      transport(response, handleError);\n    }\n  }\n\n  return this;\n}\n\nObject.assign(sheetrock, { defaults, version });\n\n// If jQuery is available as a global, register as a plugin.\ntry {\n  window.jQuery.fn.sheetrock = sheetrock;\n} catch (ignore) { /* empty */ }\n\nexport default sheetrock;\n","import fetch from 'cross-fetch';\nimport SheetrockError from './error';\n\n// There is an issue with new Sheets causing the string \")]}'\" to be\n// prepended to the JSON output when the X-DataSource-Auth is added.\n// Until this is fixed, load as text and manually strip with regex. :(\n// https://github.com/google/google-visualization-issues/issues/1928\nexport default function get(response, callback) {\n  const transportOptions = {\n    headers: {\n      'X-DataSource-Auth': 'true',\n    },\n  };\n\n  fetch(response.request.url, transportOptions)\n    .then((resp) => {\n      if (!resp.ok) {\n        throw new SheetrockError('Request failed.', resp.status);\n      }\n\n      return resp.text();\n    })\n    .then((body) => {\n      const data = JSON.parse(body.replace(/^\\)]\\}'\\n/, ''));\n      response.loadData(data, callback);\n    })\n    .catch((error) => {\n      if (error instanceof SheetrockError) {\n        return callback(error);\n      }\n\n      const errorMessage = error && error.message ? error.message : 'Request failed.';\n\n      return callback(new SheetrockError(errorMessage, 500));\n    });\n}\n"],"names":["defaults","url","query","target","fetchSize","labels","rowTemplate","callback","reset","legacyOptions","sql","resetStatus","chunkSize","rowHandler","sheetTypes","apiEndpoint","keyFormat","RegExp","gidFormat","getCellValue","cell","value","f","v","Array","join","replace","wrapTag","str","tag","toHTML","row","num","html","Object","keys","cells","forEach","key","SheetrockError","Error","constructor","message","code","super","this","name","Options","options","data","user","validatedOptions","blob","el","jquery","length","nodeType","extractElement","Math","max","parseInt","config.defaults","setUserOptions","newOptions","hasOwnProperty","call","config.legacyOptions","translateLegacyOptions","request","sheetType","config.sheetTypes","test","sheetKey","match","gid","setRequestOptions","requestIndex","stateCache","failed","header","loaded","offset","store","Request","index","state","hasPreviousState","savedState","size","pageQuery","queryVars","encodeURIComponent","update","attributes","assign","Row","number","cellsArray","map","cellsObj","label","Response","setAttributes","rows","raw","table","cols","last","rowNumberOffset","columnLabels","col","i","util.getCellValue","c","id","userLabels","userLabelsValid","setOutput","push","counter","setHTML","template","util.toHTML","isTable","tagName","needsHeader","className","indexOf","util.hasClass","headerHTML","bodyHTML","util.wrapTag","insertAdjacentHTML","util.append","eventName","Event","event","dispatchEvent","util.triggerEvent","loadData","rawData","error","callbackIndex","sheetrock","userOptions","response","handleError","window","headElement","document","getElementsByTagName","scriptElement","createElement","callbackName","always","removeChild","addEventListener","type","src","appendChild","browserTransport","fetch","headers","then","resp","ok","status","text","body","JSON","parse","catch","errorMessage","transport","version","jQuery","fn","ignore"],"mappings":"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"}